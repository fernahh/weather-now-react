// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Card /> render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    title="Foobar"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="card__header"
>
          <h1
                    className="card__title"
          >
                    Foobar
          </h1>
</header>,
        <section
          className="card__content"
/>,
      ],
      "className": "card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1
            className="card__title"
>
            Foobar
</h1>,
          "className": "card__header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Foobar",
            "className": "card__title",
          },
          "ref": null,
          "rendered": "Foobar",
          "type": "h1",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "className": "card__content",
        },
        "ref": null,
        "rendered": null,
        "type": "section",
      },
    ],
    "type": "article",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="card__header"
>
            <h1
                        className="card__title"
            >
                        Foobar
            </h1>
</header>,
          <section
            className="card__content"
/>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="card__title"
>
              Foobar
</h1>,
            "className": "card__header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Foobar",
              "className": "card__title",
            },
            "ref": null,
            "rendered": "Foobar",
            "type": "h1",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "card__content",
          },
          "ref": null,
          "rendered": null,
          "type": "section",
        },
      ],
      "type": "article",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<Card /> should render card content 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    title="Foobar"
>
    <p>
        Foobar
    </p>
</Card>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <header
          className="card__header"
>
          <h1
                    className="card__title"
          >
                    Foobar
          </h1>
</header>,
        <section
          className="card__content"
>
          <p>
                    Foobar
          </p>
</section>,
      ],
      "className": "card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <h1
            className="card__title"
>
            Foobar
</h1>,
          "className": "card__header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Foobar",
            "className": "card__title",
          },
          "ref": null,
          "rendered": "Foobar",
          "type": "h1",
        },
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            Foobar
</p>,
          "className": "card__content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Foobar",
          },
          "ref": null,
          "rendered": "Foobar",
          "type": "p",
        },
        "type": "section",
      },
    ],
    "type": "article",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <header
            className="card__header"
>
            <h1
                        className="card__title"
            >
                        Foobar
            </h1>
</header>,
          <section
            className="card__content"
>
            <p>
                        Foobar
            </p>
</section>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h1
              className="card__title"
>
              Foobar
</h1>,
            "className": "card__header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Foobar",
              "className": "card__title",
            },
            "ref": null,
            "rendered": "Foobar",
            "type": "h1",
          },
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              Foobar
</p>,
            "className": "card__content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Foobar",
            },
            "ref": null,
            "rendered": "Foobar",
            "type": "p",
          },
          "type": "section",
        },
      ],
      "type": "article",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
