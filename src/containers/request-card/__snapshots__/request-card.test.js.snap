// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RequestCard /> when get data complete with success render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RequestCard
    cacheKey={undefined}
    cacheTime={undefined}
    errorMessage="Something went wrong"
    onGetDataError={[Function]}
    onGetDataSuccess={[Function]}
    refreshInterval={undefined}
    title="Foobar"
    url="http://api.com/dog"
>
    <p
        className="content"
    >
        Content
    </p>
</RequestCard>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Card
        title="Foobar"
>
        <Loader />
</Card>,
      "className": "request-card",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Loader />,
          false,
          false,
        ],
        "title": "Foobar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Card
          title="Foobar"
>
          <Loader />
</Card>,
        "className": "request-card",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Loader />,
            false,
            false,
          ],
          "title": "Foobar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
          false,
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<RequestCard /> when get data is rejected render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RequestCard
    cacheKey={undefined}
    cacheTime={undefined}
    errorMessage="Something went wrong"
    onGetDataError={[Function]}
    onGetDataSuccess={[Function]}
    refreshInterval={undefined}
    title="Foobar"
    url="http://api.com/dog"
>
    <p
        className="content"
    >
        Content
    </p>
</RequestCard>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Card
        title="Foobar"
>
        <Loader />
</Card>,
      "className": "request-card",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Loader />,
          false,
          false,
        ],
        "title": "Foobar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Card
          title="Foobar"
>
          <Loader />
</Card>,
        "className": "request-card",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Loader />,
            false,
            false,
          ],
          "title": "Foobar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
          false,
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

exports[`<RequestCard /> when render render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RequestCard
    cacheKey={undefined}
    cacheTime={undefined}
    errorMessage="Something went wrong"
    onGetDataError={[Function]}
    onGetDataSuccess={[Function]}
    refreshInterval={undefined}
    title="Foobar"
    url="http://api.com/dog"
>
    <p
        className="content"
    >
        Content
    </p>
</RequestCard>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Card
        title="Foobar"
>
        <Loader />
</Card>,
      "className": "request-card",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Loader />,
          false,
          false,
        ],
        "title": "Foobar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        false,
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Card
          title="Foobar"
>
          <Loader />
</Card>,
        "className": "request-card",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Loader />,
            false,
            false,
          ],
          "title": "Foobar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
          false,
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
